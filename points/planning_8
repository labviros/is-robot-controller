#!/usr/bin/env python
from sympy import *
import numpy as np
import math
import argparse

def planning_8(Ax, Ay, X0, Y0, tf, rate) :
	t = Symbol('t')
	w = Symbol('w')
	phi = Symbol('phi')
	x0 = Symbol('x0')
	y0 = Symbol('y0')

	ax = (2 * Ax) / (3 - cos(2*(w*t + phi)))
	ay = (Ay / 0.35) / (3 - cos(2*(w*t + phi)))

	x = ax*cos(w*t + phi)/2 + x0
	y = ay*sin(2*(w*t + phi))/2 + y0
	dx = diff(x, t)
	dy = diff(y, t)

	_X = lambdify((w, t, phi, x0), x, 'numpy')
	_Y = lambdify((w, t, phi, y0), y, 'numpy')
	_dX = lambdify((w, t, phi, x0), dx, 'numpy')
	_dY = lambdify((w, t, phi, y0), dy, 'numpy')

	T =  1/rate
	t = np.arange(0, tf, T)
	w = 2*math.pi/tf
	phi = math.pi/3

	X = _X(w, t, phi, X0)
	Y = _Y(w, t, phi, Y0)
	dX = _dX(w, t, phi, X0)
	dY = _dY(w, t, phi, Y0)

	positions = np.transpose(np.concatenate(
		(np.expand_dims(X, axis=1), np.expand_dims(Y, axis=1)), 
		axis = 1))
	speeds = np.transpose(np.concatenate(
		(np.expand_dims(dX, axis=1), np.expand_dims(dY, axis=1)), 
		axis = 1))

	np.savetxt('positions.mat', positions, delimiter=" ", fmt="%1.6e")
	np.savetxt('speeds.mat', speeds, delimiter=" ", fmt="%1.6e")

def main() :
	parser = argparse.ArgumentParser(description='Generates positions and speeds.')
	parser.add_argument('-d', nargs=2, type=float)
	parser.add_argument('-o', nargs=2, type=float)
	parser.add_argument('-t', type=float)
	parser.add_argument('-r', type=float)

	option = parser.parse_args()
	
	Ax = option.d[0]
	Ay = option.d[1]
	X0 = option.o[0]
	Y0 = option.o[1]
	tf = option.t
	rate = option.r
	planning_8(Ax, Ay, X0, Y0, tf, rate)
	
if __name__ == "__main__":
    main()
